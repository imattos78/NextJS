{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ignaciomattos/Documents/nextJS/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Container from \"../components/container\";\nimport Head from \"next/head\"; //import fetch from 'isomorphic-fetch';\n\nimport Users from '../components/users';\n\nvar Index = function Index(props) {\n  console.log(props);\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, \"Next Project - Home\")), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Users\"), __jsx(Users, {\n    users: props.users,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }));\n};\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, resJSON;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://reqres.in/api/users');\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            resJSON = _context.sent;\n            return _context.abrupt(\"return\", {\n              users: resJSON.data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/ignaciomattos/Documents/nextJS/pages/index.js"],"names":["Container","Head","Users","Index","props","console","log","users","getInitialProps","ctx","fetch","res","json","resJSON","data"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,EAKI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAK,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAaH,CAfD;;KAAMJ,K;;AAgBNA,KAAK,CAACK,eAAN;AAAA,sEAAyB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHC,KAAK,CAAC,6BAAD,CADF;;AAAA;AACfC,YAAAA,GADe;AAAA;AAAA,mBAECA,GAAG,CAACC,IAAJ,EAFD;;AAAA;AAEfC,YAAAA,OAFe;AAAA,6CAGd;AAACN,cAAAA,KAAK,EAACM,OAAO,CAACC;AAAf,aAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAeX,KAAf","sourcesContent":["import Container from \"../components/container\"\nimport Head from \"next/head\"\n//import fetch from 'isomorphic-fetch';\nimport Users from '../components/users';\n\nconst Index = (props) => {\n    console.log(props)\n    return (\n        <Container>\n            <Head>\n                <title>Next Project - Home</title>\n            </Head>\n            <h1>Users</h1>\n            <Users users={props.users}/>\n\n        </Container>\n\n\n\n    )\n}\nIndex.getInitialProps =  async (ctx) =>{\n    const res = await fetch('https://reqres.in/api/users');\n    const resJSON = await res.json()\n    return {users:resJSON.data}\n \n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}